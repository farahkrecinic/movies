{"ast":null,"code":"var _jsxFileName = \"/home/krecinic/movies/client/src/pages/MoviesList.jsx\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport api from '../api';\nimport { ListWrapper, Update, Delete } from './movies.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateMovie extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateUser = event => {\n      event.preventDefault();\n      window.location.href = `/movies/update/${this.props.id}`;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Update, {\n      onClick: this.updateUser,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass DeleteMovie extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.deleteUser = event => {\n      event.preventDefault();\n\n      if (window.confirm(`Do you want to delete the movie ${this.props.id} permanently?`)) {\n        api.deleteMovieById(this.props.id);\n        window.location.reload();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Delete, {\n      onClick: this.deleteUser,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass MoviesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await api.getAllMovies().then(movies => {\n        this.setState({\n          movies: movies.data.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      movies: [],\n      columns: [],\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      movies,\n      isLoading\n    } = this.state;\n    console.log('TCL: MoviesList -> render -> movies', movies); // const columns = [\n    //     {\n    //         Header: 'ID',\n    //         accessor: '_id',\n    //         filterable: true,\n    //     },\n    //     {\n    //         Header: 'Name',\n    //         accessor: 'name',\n    //         filterable: true,\n    //     },\n    //     {\n    //         Header: 'Rating',\n    //         accessor: 'rating',\n    //         filterable: true,\n    //     },\n    //     {\n    //         Header: 'Time',\n    //         accessor: 'time',\n    //         Cell: props => <span>{props.value.join(' / ')}</span>,\n    //     },\n    //     {\n    //         Header: '',\n    //         accessor: '',\n    //         Cell: function(props) {\n    //             return (\n    //                 <span>\n    //                     <DeleteMovie id={props.original._id} />\n    //                 </span>\n    //             )\n    //         },\n    //     },\n    //     {\n    //         Header: '',\n    //         accessor: '',\n    //         Cell: function(props) {\n    //             return (\n    //                 <span>\n    //                     <UpdateMovie id={props.original._id} />\n    //                 </span>\n    //             )\n    //         },\n    //     },\n    // ]\n    // let showTable = true\n    // if (!movies.length) {\n    //     showTable = false\n    // }\n\n    return /*#__PURE__*/_jsxDEV(ListWrapper, {\n      children: movies.map(({\n        _id,\n        name,\n        time,\n        rating\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapList\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(UpdateMovie, {\n            id: _id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(DeleteMovie, {\n            id: _id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MoviesList;","map":{"version":3,"sources":["/home/krecinic/movies/client/src/pages/MoviesList.jsx"],"names":["React","Component","ReactTable","api","ListWrapper","Update","Delete","UpdateMovie","updateUser","event","preventDefault","window","location","href","props","id","render","DeleteMovie","deleteUser","confirm","deleteMovieById","reload","MoviesList","constructor","componentDidMount","setState","isLoading","getAllMovies","then","movies","data","state","columns","console","log","map","_id","name","time","rating"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactTable from 'react-table'\nimport api from '../api'\n\nimport { ListWrapper, Update, Delete} from './movies.styles';\n\nclass UpdateMovie extends Component {\n    updateUser = event => {\n        event.preventDefault()\n\n        window.location.href = `/movies/update/${this.props.id}`\n    }\n\n    render() {\n        return <Update onClick={this.updateUser}>Update</Update>\n    }\n}\n\nclass DeleteMovie extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do you want to delete the movie ${this.props.id} permanently?`,\n            )\n        ) {\n            api.deleteMovieById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n\nclass MoviesList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            movies: [],\n            columns: [],\n            isLoading: false,\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({ isLoading: true })\n\n        await api.getAllMovies().then(movies => {\n            this.setState({\n                movies: movies.data.data,\n                isLoading: false,\n            })\n        })\n    }\n\n    render() {\n        const { movies, isLoading } = this.state\n        console.log('TCL: MoviesList -> render -> movies', movies)\n\n        // const columns = [\n        //     {\n        //         Header: 'ID',\n        //         accessor: '_id',\n        //         filterable: true,\n        //     },\n        //     {\n        //         Header: 'Name',\n        //         accessor: 'name',\n        //         filterable: true,\n        //     },\n        //     {\n        //         Header: 'Rating',\n        //         accessor: 'rating',\n        //         filterable: true,\n        //     },\n        //     {\n        //         Header: 'Time',\n        //         accessor: 'time',\n        //         Cell: props => <span>{props.value.join(' / ')}</span>,\n        //     },\n        //     {\n        //         Header: '',\n        //         accessor: '',\n        //         Cell: function(props) {\n        //             return (\n        //                 <span>\n        //                     <DeleteMovie id={props.original._id} />\n        //                 </span>\n        //             )\n        //         },\n        //     },\n        //     {\n        //         Header: '',\n        //         accessor: '',\n        //         Cell: function(props) {\n        //             return (\n        //                 <span>\n        //                     <UpdateMovie id={props.original._id} />\n        //                 </span>\n        //             )\n        //         },\n        //     },\n        // ]\n\n        // let showTable = true\n        // if (!movies.length) {\n        //     showTable = false\n        // }\n\n        return (\n            <ListWrapper>\n                {\n                    movies.map(({_id, name, time, rating}) => (\n                        <div className='mapList' key={_id}><h1>{name}</h1>\n                        <p>{time}</p>\n                        <p>{rating}</p>\n                        <span>\n                            <UpdateMovie id={_id} />\n                        </span>\n                        <span>\n                            <DeleteMovie id={_id} />\n                        </span>\n                        </div>\n                    ))\n                }\n            </ListWrapper>\n        )\n    }\n}\n\nexport default MoviesList"]},"metadata":{},"sourceType":"module"}